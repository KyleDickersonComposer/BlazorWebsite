@inherits LayoutComponentBase

@inject IDialogService DialogServ
@inject NavigationManager NavManager


<PageTitle>BlazorTest</PageTitle>
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider CloseOnEscapeKey="true" />
<MudSnackbarProvider />

<MudLayout>

    <MudDrawer @bind-Open="@_drawerOpen">
        <MudNavMenu Rounded="true" Margin="Margin.Normal" Color="Color.Surface" Class="pa-3">

            <MudNavLink Href="/counter" Icon="@Icons.Material.Filled.Cake">Counter</MudNavLink>
            <MudNavLink Href="/weather" Icon="@Icons.Material.Filled.Cloud">Weather</MudNavLink>
            <MudNavLink OnClick="OnButtonClicked" Icon="@Icons.Material.Filled.Link">Blazor Survey</MudNavLink>

            <MudDivider />
            <MudSwitch @onclick="@darkToggle" bind-value="@_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool"
                Label="Dark Mode" />
        </MudNavMenu>
    </MudDrawer>

    <MudAppBar Color="Color.Dark">

        @* <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Info" Edge="Edge.Start"
        OnClick="@((e) => DrawerToggle())" /> *@
        <MudText Typo="Typo.h5" Color="Color.Surface">Kyle Dickerson Composer</MudText>

        @code {
        private MudTheme _theme = new();
        public void darkToggle()
        {
            if (_isDarkMode == false)
            {
            _isDarkMode = true;
            }
            else if (_isDarkMode == true)
            {
            _isDarkMode = false;
            }
        }
        private bool _isDarkMode = false;
        }

    </MudAppBar>

    <MudMainContent>
        <MudContainer Class="ma-50px" MaxWidth="MaxWidth.Large">
            <MudPaper Elevation="0" Height="100%">
                @Body
            </MudPaper>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    MudTheme MyCustomTheme = new MudTheme()
        {
            Palette = new PaletteLight()
            {
                Primary = Colors.Red.Accent4,
                Secondary = Colors.Yellow.Accent4,
                AppbarBackground = Colors.Teal.Default,
                Info = Colors.Cyan.Accent1
            },
            PaletteDark = new PaletteDark()
            {
                Primary = Colors.Blue.Lighten1
            },

            LayoutProperties = new LayoutProperties()
            {
                DrawerWidthLeft = "260px",
                DrawerWidthRight = "300px"
            }
        };
}

@code {
    bool _drawerOpen = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}

@code {
    private async void OnButtonClicked()
    {
        bool? result = await DialogServ.ShowMessageBox(
        "Warning",
        @"You are leaving this page for a Blazor survey.",
        yesText: "Leave", cancelText: "Stay");

        if (result != null && result == true)
        {
            NavManager.NavigateTo("https://go.microsoft.com/fwlink/?linkid=2186158", true);
        }
    }
}
